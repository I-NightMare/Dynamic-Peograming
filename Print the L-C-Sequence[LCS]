Given two sequences, print the longest subsequence present in both of them. 
----------------------------------------------------------------------------
----------------------------------------------------------------------------
#include<iostream>
#include<string>
#include<bits/stdc++.h>
using namespace std;
int main()
{   
    string a,b;
    //taking both string as input
    cin>>a>>b;
    //finding out the length of each of the string
    int m,n;
    m=a.length();
    n=b.length();
    //both length of the string and stored
    //now we have to find out the LCS,longest commmon subsequence
    //making a matriz first
    int t[m+1][n+1];
    //now with initialization
    for(int i=0;i<m+1;i++)
    {
        for(int j=0;j<n;j++)
        {
            if(i==0 or j==0)
            {
                t[i][j]=0;
            }
        }
    }
    //initialization is completed
    for(int i=1;i<m+1;i++)
    {
        for(int j=1;j<n+1;j++)
        {
            if(a[i-1]==b[j-1])
            {
                t[i][j]=1+t[i-1][j-1];
            }
            else
            {
                t[i][j]=max(t[i-1][j],t[i][j-1]);
            }
        }
    }
    //table is ready
    //its time for heckingthe LCS
    cout<<"the lcs of the given string :- "<<a<<" and "<<b<<" is:- "<<t[m][n]<<endl;
    cout<<"the string is:-";
    int i=m;
    int j=n;
    string s;
    while(i>0 and j>0)
    {
        if(a[i-1]==b[j-1])
        {
            s.push_back(a[i-1]);
            i--;
            j--;
        }
        else
        {
            if(t[i][j-1]>t[i-1][j])
            {
                j--;
            }
            else
            {
                i--;
            }
        }
    }
    reverse(s.begin(),s.end());
    cout<<s<<endl;
    return 0;
}

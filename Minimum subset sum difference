type of structure of question:-
Given a set of integers, the task is to divide it into two sets S1 and S2 such that the absolute difference between their sums is minimum. 
If there is a set S with n elements, then if we assume Subset1 has m elements, Subset2 must have n-m elements and the value of abs(sum(Subset1) â€“ sum(Subset2)) should be minimum.
..................................................................................................................................................................................
                                                                            CODE
..................................................................................................................................................................................
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int main()
{   
    int t;
    //taking the total number of inputs for the test case
    cout<<"How many times you want this code to run:- ";
    cin>>t;
    cout<<endl;
    while(t--)
    {
        int n,sum;
        cout<<"the length of array would be:- ";
        cin>>n;
        int arr[n];
        cout<<endl;
        //finding the range(sum) and also taking the input at same time
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
            sum=sum+arr[i];
        }
        //creating the table for top down approach
        int t[n+1][sum+1];
        //making the array inw hich only the chose number would exist.
        int final[sum];
        int x=0;
        cout<<"The Array input is successful  "<<endl;
        cout<<"your lenght of array is ["<<n<<"] and the sum is ["<<sum<<"]"<<endl;
        //initializing the table for top down approach
        for(int m=0;m<=sum;m++)
        {
            for(int i=0;i<n+1;i++)
            {
                for(int j=0;j<m+1;j++)
                {
                    if(i==0)
                    {
                        t[i][j]=0;
                    }
                }
                for(int j=0;j<m+1;j++)
                {
                    if(j==0)
                    {
                        t[i][j]=1;
                    }
                }
            }
            //finding if there is subset present for the given sum(the sum would keep on chnging to the numbers present in reange
            //so that we can make an array of the chosen number)
            for(int i=1;i<n+1;i++)
            {
                for(int j=1;j<m+1;j++)
                {
                    if(arr[i-1]<=j)
                    {
                        t[i][j]=max(t[i-1][j-arr[i-1]],t[i-1][j]);
                    }
                    else if(arr[i-1]>j)
                    {
                        t[i][j]=t[i-1][j];
                    }
                }
            }
            if(t[n][m]==1)
            {
                final[x]=m;
                x++;
            }
        }
        //array of chosen number is made
        /*for(int i=0;i<x;i++)
        {
            cout<<final[i]<<" ";
        }*/
        //finding the minimum out of the combinations of the array elements,we are just doing this for the first half element,
        //as this would repeat in the second half of element
        int Min=sum;
        for(int i=0;i<x/2;i++)
        {
            Min=min(Min,sum-2*final[i]);
        }
        cout<<Min<<endl;
    }   
    return 0;
}
